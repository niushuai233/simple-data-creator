server:
  port: 8080
  servlet:
    context-path: /

spring:
  main:
    # 是否允许bean定义被覆盖
    allow-bean-definition-overriding: true
    # 是否允许循环依赖
    allow-circular-references: false
  application:
    name: data-creator
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:file:./${spring.application.name};TIME ZONE=CTT
    username: sa
    password: sa

  h2:
    console:
      enabled: true
      path: /h2
      settings:
        web-allow-others: true

  # 线程池配置
  task:
    # core配置
    execution:
      thread-name-prefix: coreExecutor
      pool:
        core-size: 8
        max-size: 16
        keep-alive: 60s
        allow-core-thread-timeout: true
        queue-capacity: 10
        shutdown:
          accept-tasks-after-context-close: false
      simple:
        concurrency-limit: 8
    # scheduler配置
    scheduling:
      thread-name-prefix: scheExecutor
      pool:
        size: 8
      simple:
        concurrency-limit: 8
    # async配置
    async:
      threadNamePrefix: asyncExecutor
      pool:
        coreSize: 8
        maxSize: 16
        queueCapacity: 2

  freemarker:
    # 启用 freemarker 模板
    enabled: true
    # 是否缓存
    cache: false
    # Content Type
    content-type: text/html
    # 编码
    charset: utf-8
    # 模板后缀
    suffix: .ftl
    # 引用 request 的属性名称
    request-context-attribute: request
    # 是否暴露 request 域中的属性
    expose-request-attributes: true
    # 是否暴露session域中的属性
    expose-session-attributes: true
    # request 域中的属性是否可以覆盖 controller 的 model 的同名项。默认 false，如果发生同名属性覆盖的情况会抛出异常
    allow-request-override: true
    # session 域中的属性是否可以覆盖 controller 的 model 的同名项。默认 false，如果发生同名属性覆盖的情况会抛出异常
    allow-session-override: true
    # 暴露官方提供的宏
    expose-spring-macro-helpers: true
    # 启动时检查模板位置是否有效
    check-template-location: true
    # 优先加载文件系统的模板
    prefer-file-system-access: true
    # 模板所在位置（目录）
    template-loader-path:
      - classpath:/templates/
    settings:
      # date 输出格式化
      datetime_format: yyyy-MM-dd HH:mm:ss
      # 模板引擎刷新时间
      template_update_delay: 0
      # 默认编码
      default_encoding: utf-8
  liquibase:
    enabled: true
    driver-class-name: ${spring.datasource.driver-class-name}
    url: ${spring.datasource.url}
    user: ${spring.datasource.username}
    password: ${spring.datasource.password}
    change-log: classpath:/db/liquibase/db.changelog-master.yaml
    parameters:
      generalStr: varchar(50)
      longerStr: varchar(100)
      textStr: varchar(255)

mybatis-flex:
  mapper-locations: classpath*:cc/niushuai/**/mapper/xml/*Mapper.xml
  configuration:
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    # 返回类型为Map,显示null对应的字段 默认为false
    call-setters-on-nulls: true
    # 是否开启自动驼峰命名规则(camel case)映射 默认为true
    map-underscore-to-camel-case: true
  global-config:
    # 关闭字符画
    print-banner: false

sa-token:
  # 是否在初始化配置时在控制台打印版本字符画
  is-print: false
  # token 名称 （同时也是： cookie 名称、提交 token 时参数的名称、存储 token 时的 key 前缀）
  token-name: token
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）
  token-style: simple-uuid
  # 是否打开自动续签 activeTimeout （如果此值为 true, 框架会在每次直接或间接调用 getLoginId() 时进行一次过期检查与续签操作
  auto-renew: true
  # token有效期，单位s 默认30天, -1代表永不过期 (86400 1d, 7200 2h)
  timeout: 86400
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结 （例如可以设置为 1800 代表 30 分钟内无操作就冻结）
  active-timeout: 7200
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个token, 为 false 时每次登录新建一个 token）
  is-share: false
  # 是否打印操作日志
  is-log: true
  # 是否打印彩色日志
  is-color-log: false
  # 是否尝试从请求体里读取 token
  is-read-body: false
  # 是否尝试从cookie里读取 token
  is-read-cookie: false
  # 是否尝试从header里读取 token
  is-read-header: true
  # 是否在登录后将 token 写入到响应头
  is-write-header: false
  # 同一账号最大登录数量，-1代表不限 （只有在 isConcurrent=true, isShare=false 时此配置项才有意义）
  max-login-count: -1
  # 在每次创建 token 时的最高循环次数
  max-try-times: 5



logging:
  level:
    root: info
    cc.niushuai: debug
